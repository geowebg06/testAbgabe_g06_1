{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/Stamen.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","content","options","hmr","transform","insertInto","undefined","locals","useSourceMap","list","toString","map","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","fn","memo","stylesInDom","isOldIE","window","document","atob","arguments","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","createStyleElement","createElement","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","floor","newRight","factory","util_abstract","uidCounter_","getUid","ol_uid","String","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","Array","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","var_sources","TypeError","output","ii","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","events_Event","Event","propagationStopped","preventDefault","stopPropagation","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","isArray","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","set","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","f","array","getArray","elem","removeAt","prev","setAt","opt_except","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","x","clientX","y","clientY","dx","abs","dy","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","linearFindNearest","direction","reverseSubArray","begin","end","extension","equals","arr1","arr2","len1","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","assert","assertion","errorCode","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","none","center","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","getArea","extent_isEmpty","getWidth","getHeight","getBottomLeft","getBottomRight","getCenter","getCorner","corner","getTopLeft","getTopRight","getForViewAndSize","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","easeIn","easeOut","inAndOut","linear","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","deflateCoordinate","linearRingContainsExtent","callback","val","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","isDef","getAnimating","animate_","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getComputedStyle","parseInt","w","h","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getProjection","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","getContext","replaceNode","oldNode","replaceChild","removeNode","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","cache","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","renderEvent","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","add","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getAngle","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","context","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","normalize","color","color_toString","g","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerStates","getLayerRenderer","callback_1","getWrapX","layerKey","renderer","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","reduce","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","children_","oldChildren","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","body","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","ImageState","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","getImageData","err","Uint8Array","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile","tileState","getTile","setState","getInterimTile","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clearRect","zs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","restore","canvasTransform","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","getImage","postRenderFunction","expireCache","tileCache","opt_tileCallback","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","ERROR_THRESHOLD","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageTile_extends","getBlankImage","ctx","fillStyle","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","image_","Image","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","p1","p2","strokeStyle","lineWidth","closePath","stroke","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getOrigin","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","self","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","match","exec","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","xyzOptions","gridOptions","createXYZ","OSM_extends","ATTRIBUTION","Stamen_extends","OSM","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","asColorLike","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getScale","getRotateWithView","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getFill","getPoints","getRadius","getRadius2","getStroke","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","arc","setLineDash","drawHitDetectionCanvas_","Circle_extends","Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","style_Style","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","styles_1","toFunction","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","LINE","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Default","LineString","Text","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","textAlign","flatOffset","flatEnd","oo","drawChars_","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","textBaseline","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","TEXT","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","overlaps","declutterTree","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","strokeText","fillText","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","renderDeclutter_","groupCount","box","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","cc","chars","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","imageData","i_1","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometries","getGeometriesArray","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","vectorSource","clipExtent","clipped","world","transform_1","transform_2","layer_1","features_1","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadFeatures","dirty","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","FormatType","ARRAY_BUFFER","XML","featureloader_xhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","loadingstrategy_all","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","decimals","power_1","JSONFeature_extends","getObject","parse","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","LineString_extends","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","MultiLineString_extends","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","appendPoint","getPoint","MultiPolygon_extends","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","center_linearRingss","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","DEFAULT_FILL_COLOR","style_Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","main_map","main_layer","layer2"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.6';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {?}\n         */\n        _this.declutterTree = declutterTree;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!this.declutterTree.collides(box)) {\n                    this.declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = declutterTree;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    if (declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(executor, transform.slice(0));\n                        }\n                    }\n                    else {\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        if (this.declutterTree_) {\n            this.declutterTree_.clear();\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\n                startX -= worldWidth;\n            }\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback.call(thisArg, feature, layer_1);\n                }\n            }, null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport Stamen from 'ol/source/Stamen';\nimport VectorLayer from 'ol/layer/Vector';\nimport Vector from 'ol/source/Vector';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Style from 'ol/style/Style';\nimport Text from 'ol/style/Text';\nimport Stroke from 'ol/style/Stroke';\nimport * as olProj from 'ol/proj';\n\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: olProj.fromLonLat([16.37, 48.2]),\n    zoom: 13\n  })\n});\n\nmap.addLayer(new TileLayer({\n  source: new Stamen({\n    layer: 'watercolor'\n  })\n}));\n\nconst layer = new VectorLayer({\n  source: new Vector({\n    url: 'data/map.geojson',\n    format: new GeoJSON()\n  })\n});\nmap.addLayer(layer);\n\nlayer.setStyle(function(feature) {\n  return new Style({\n    text: new Text({\n      text: feature.get('name'),\n      font: 'Bold 14pt Verdana',\n      stroke: new Stroke({\n        color: 'white',\n        width: 3\n      })\n    })\n  });\n});\n\nconst layer2 = new VectorLayer({\n  source: new Vector({\n    url: 'data/map.geojson',\n    format: new GeoJSON()\n  })\n});\nmap.addLayer(layer2);\n\nlayer2.setStyle(function(feature) {\n  return new Style({\n    text: new Text({\n      text: feature.get('location'),\n      offsetY: 20,\n      font: 'Bold 10pt Verdana',\n      stroke: new Stroke({\n        color: 'white',\n        width: 3\n      })\n    })\n  });\n});\n\n\n"],"sourceRoot":""}